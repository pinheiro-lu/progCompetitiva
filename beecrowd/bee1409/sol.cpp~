#include <bits/stdc++.h>

using namespace std;

typedef long long ll;

const int INF = 1e9;

int n, m, g, k;
vector<vector<int>> adj;
vector<pair<int, int>>mg;
vector<int> dist;
priority_queue<pair<int, int>> q;
vector<bool> proc;
vector<vector<vector<int>>> mon;
vector<int> mana;

signed main() {
	ios_base::sync_with_stdio(0); cin.tie(0);
	cin >> m;
	while (m) {
		cin >> n >> g >> k;
		adj.assign(n+1, vector<int>(n+1));
		mg.resize(m);
		proc.assign(n+1, false);
		mana.assign(2001, INF);
		mon.assign(n+1, vector<vector<int>>(n+1));
		dist.assign(n+1, INF);

		for (auto &[a, b] : mg) {
			cin >> a >> b;
		}
		adj.at(0).at(1) = true;
		for (int i = 0; i < g; ++i) {
			int a, b;
			cin >> a >> b;
			adj.at(a).at(b) = true; 
			adj.at(b).at(a) = true;
		}

		for (int i = 0; i < k; ++i) {
			int a, b;
			cin >> a >> b;
			for (int j = 0; j <= n; ++j) {
				if (adj.at(j).at(a)) mon.at(j).at(a).push_back(b);
			}
		}

		mana.at(0) = 0;
		for (int i = 1; i <= 2000; ++i) {
			for (auto &[a, b] : mg) {
				if (i >= b) {
					mana.at(i) = min(mana.at(i), a + mana.at(i-b));
				}
			}
		}
		for (int i = 2000; i >= 1; --i) {
			mana.at(i-1) = min(mana.at(i-1), mana.at(i));
		}

		dist.at(0) = 0;
		q.push({-dist.at(0),0});
		while (!q.empty()) {
			int a = q.top().second; q.pop();
			if (proc.at(a)) continue;
			proc.at(a) = true;
			for (int i = 0; i <= n; ++i) {
				if (!adj.at(a).at(i)) continue;
				vector<int> &u = mon.at(a).at(i);
				int sum = 0;
				for (int &x : u) sum += mana.at(x);
				//cerr << "somando " << sum << " para ir de " << a << " para " << i << '\n';
				if (sum + dist.at(a) < dist.at(i)) {
					dist.at(i) = sum + dist.at(a);
					q.push({-dist.at(i), i});
				}
			}
		}
		int ans = dist.at(n);

		if (ans < INF) cout << ans << '\n';
		else cout << "-1\n";

		cin >> m;
	}


	return 0;
}
